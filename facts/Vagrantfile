# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$install_rvm = <<SCRIPT
# Install mpapis public key
gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 ||
curl -sSL https://rvm.io/mpapis.asc | gpg --import -

# Run the installer
\\curl -sSL https://get.rvm.io | bash -s stable --ruby=1.9.3
SCRIPT

$get_facts = <<SCRIPT
source /etc/profile.d/rvm.sh

gem install bundler

# Install latest version of facter
bundle install
operatingsystem=$(bundle exec facter operatingsystem | tr '[:upper:]' '[:lower:]')
operatingsystemmajrelease=$(bundle exec facter operatingsystemmajrelease)
hardwaremodel=$(bundle exec facter hardwaremodel)

# Fix for FreeBSD
[ "${hardwaremodel}" = 'amd64' ] && hardwaremodel='x86_64'

for version in 1.6.0 1.7.0 2.0.0 2.1.0 2.2.0 2.3.0 2.4.0; do
  FACTER_GEM_VERSION="~> ${version}" bundle update
  minor_version=$(echo $version | cut -c1-3)
  output_dir="/vagrant/${minor_version}"
  mkdir -p $output_dir
  echo $version | grep -q -E '^1\.' &&
    FACTER_GEM_VERSION="~> ${version}" bundle exec facter -j | bundle exec ruby -e 'require "json"; jj JSON.parse gets' | tee "${output_dir}/${operatingsystem}-${operatingsystemmajrelease}-${hardwaremodel}.facts" ||
    FACTER_GEM_VERSION="~> ${version}" bundle exec facter -j | tee "${output_dir}/${operatingsystem}-${operatingsystemmajrelease}-${hardwaremodel}.facts"
done
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "debian-6-x86_64" do |host|
    host.vm.box = "puppetlabs/debian-6.0.10-64-nocm"
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "debian-7-x86_64" do |host|
    host.vm.box = "puppetlabs/debian-7.8-64-nocm"
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "debian-8-x86_64" do |host|
    host.vm.box = "camptocamp/debian-8-amd64 "
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "ubuntu-10.04-x86_64" do |host|
    host.vm.box = "ubuntu-server-10044-x64-vbox4210-nocm"
    host.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/ubuntu-server-10044-x64-vbox4210-nocm.box"
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "ubuntu-12.04-x86_64" do |host|
    host.vm.box = "puppetlabs/ubuntu-12.04-64-nocm"
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "ubuntu-14.04-x86_64" do |host|
    host.vm.box = "puppetlabs/ubuntu-14.04-64-nocm"
    host.vm.provision "shell", inline: "apt-get update"
  end
  config.vm.define "centos-5-x86_64" do |host|
    host.vm.box = "puppetlabs/centos-5.11-64-nocm"
  end
  config.vm.define "centos-6-x86_64" do |host|
    host.vm.box = "puppetlabs/centos-6.6-64-nocm"
  end
  config.vm.define "centos-7-x86_64" do |host|
    host.vm.box = "puppetlabs/centos-7.0-64-nocm"
  end
  config.vm.define "fedora-19-x86_64" do |host|
    host.vm.box = "chef/fedora-19"
  end
  config.vm.define "archlinux-x86_64" do |host|
    host.vm.box = "terrywang/archlinux"
  end
  config.vm.define "sles-11sp1-x86_64" do |host|
    host.vm.box = "suse/sles11sp3"
  end
  config.vm.define "opensuse-12-x86_64" do |host|
    host.vm.box = "alexeym/opensuse-12.3"
  end
  config.vm.define "opensuse-13-x86_64" do |host|
    host.vm.box = "webhippie/opensuse-13.2"
  end
  config.vm.define "freebsd-9-x86_64" do |host|
    host.vm.box = "chef/freebsd-9.2"
    host.vm.network :private_network, ip: '10.0.0.2'
    host.vm.synced_folder ".", "/vagrant", :nfs => true
  end
  config.vm.define "freebsd-10-x86_64" do |host|
    host.vm.box = "chef/freebsd-10.0"
    host.vm.network :private_network, ip: '10.0.0.2'
    host.vm.synced_folder ".", "/vagrant", :nfs => true
  end
  config.vm.define "gentoo-3-x86_64" do |host|
    host.vm.box = "cmiles/gentoo-amd64-minimal"
  end

  config.vm.hostname = "foo.example.com"
  config.vm.provision "file", source: "Gemfile", destination: "Gemfile"
  config.vm.provision "shell", inline: $install_rvm
  config.vm.provision "shell", inline: $get_facts
  config.vm.provision "shell", inline: "/sbin/shutdown -h now"
end
